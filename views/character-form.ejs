<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Creepster&display=swap">
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        .custom-file-upload {
            display: inline-block;
            padding: 8px 16px;
            cursor: pointer;
            background-color: #ff0000;
            color: #00ff00;
            border: 2px solid #00ff00;
            border-radius: 25px;
            text-align: center;
            width: 100%;
            box-sizing: border-box;
            margin-top: 10px;
            font-weight: bold;
            transition: all 0.3s ease;
        }
        .custom-file-upload:hover {
            background-color: #cc0000;
        }
    </style>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
    <header>
        <h1 class="landing-title"><%= title %></h1>
    </header>

    <main>
        <form action="<%= action %>" method="POST" enctype="multipart/form-data">
            <% if (character && character.id) { %>
                <input type="hidden" name="id" value="<%= character.id %>">
            <% } %>

            <div class="character-form-container">
                <div class="image-preview-container">
                    <% if (character && character.image) { %>
                        <img src="/images/characters/<%= character.image %>" alt="Character image" class="image-preview">
                    <% } else { %>
                        <div class="image-preview" style="background-color: #002200; display: flex; align-items: center; justify-content: center;">
                            <span>No Image Selected</span>
                        </div>
                    <% } %>
                    <div class="form-group" style="margin-bottom: 0;">
                        <label for="character_image" class="custom-file-upload">
                            Upload Picture
                        </label>
                        <input type="file" id="character_image" name="character_image" accept="image/*" style="width: 0.1px; height: 0.1px; opacity: 0; overflow: hidden; position: absolute; z-index: -1;">
                    </div>
                    <% if (character && character.id && character.id !== 'new') { %>
                        <a href="/api/voice/configure?characterId=<%= character.id %>" class="button configure-voice-btn" style="display: block; margin-top: 10px; background-color: #ff0000; color: #00ff00; border: 2px solid #00ff00; border-radius: 25px; text-align: center; padding: 8px; text-decoration: none;">Configure Voice</a>
                    <% } else if (isNewCharacter) { %>
                        <div class="note" style="display: block; margin-top: 10px; color: #00ff00; text-align: center;">Voice configuration available after saving</div>
                    <% } %>
                </div>

                <div class="form-content">
                    <div class="form-group">
                        <label for="char_name">Name:</label>
                        <input type="text" id="char_name" name="char_name" value="<%= character ? character.char_name : '' %>" required>
                    </div>

                    <div class="form-group">
                        <label for="char_description">Description:</label>
                        <textarea id="char_description" name="char_description" required><%= character ? character.char_description : '' %></textarea>
                    </div>

                    <!-- Animatronic Configuration Section -->
                    <div class="form-section">
                        <h3>ü§ñ Animatronic Configuration</h3>

                        <div class="form-group">
                            <label for="animatronic_enabled">
                                <input type="checkbox" id="animatronic_enabled" name="animatronic_enabled"
                                       <%= (character && character.animatronic && character.animatronic.enabled) ? 'checked' : '' %>>
                                Enable Animatronic Features
                            </label>
                        </div>

                        <div id="animatronic_config" style="<%= (character && character.animatronic && character.animatronic.enabled) ? '' : 'display: none;' %>">
                            <div class="form-group">
                                <label for="animatronic_status">Status:</label>
                                <select id="animatronic_status" name="animatronic_status">
                                    <option value="running" <%= (character && character.animatronic && character.animatronic.status === 'running') ? 'selected' : '' %>>Running</option>
                                    <option value="offline" <%= (character && character.animatronic && character.animatronic.status === 'offline') ? 'selected' : '' %>>Offline</option>
                                    <option value="virtual" <%= (character && character.animatronic && character.animatronic.status === 'virtual') ? 'selected' : '' %>>Virtual</option>
                                </select>
                            </div>

                            <div class="form-group">
                                <label for="character_type">Character Type:</label>
                                <input type="text" id="character_type" name="character_type"
                                       value="<%= (character && character.animatronic) ? character.animatronic.character_type || '' : '' %>">
                            </div>

                            <div class="form-group">
                                <label for="animatronic_description">Animatronic Description:</label>
                                <textarea id="animatronic_description" name="animatronic_description"><%= (character && character.animatronic) ? character.animatronic.description || '' : '' %></textarea>
                            </div>

                            <!-- RPI Configuration -->
                            <h4>üñ•Ô∏è RPI4b Configuration</h4>

                            <div class="form-group">
                                <label for="rpi_host">IP Address:</label>
                                <input type="text" id="rpi_host" name="rpi_host"
                                       value="<%= (character && character.animatronic && character.animatronic.rpi_config) ? character.animatronic.rpi_config.host || '' : '' %>"
                                       placeholder="192.168.x.x">
                            </div>

                            <div class="form-group">
                                <label for="rpi_user">SSH User:</label>
                                <input type="text" id="rpi_user" name="rpi_user"
                                       value="<%= (character && character.animatronic && character.animatronic.rpi_config) ? character.animatronic.rpi_config.user || 'remote' : 'remote' %>">
                            </div>

                            <div class="form-group">
                                <label for="password_env">Password Environment Variable:</label>
                                <input type="text" id="password_env" name="password_env"
                                       value="<%= (character && character.animatronic && character.animatronic.rpi_config) ? character.animatronic.rpi_config.password_env || '' : '' %>"
                                       placeholder="CHARACTER_SSH_PASSWORD">
                            </div>

                            <div class="form-group">
                                <label for="collection_interval">Log Collection Interval (seconds):</label>
                                <input type="number" id="collection_interval" name="collection_interval"
                                       value="<%= (character && character.animatronic && character.animatronic.rpi_config) ? character.animatronic.rpi_config.collection_interval || 300 : 300 %>"
                                       min="60" max="3600">
                            </div>

                            <div class="form-group">
                                <label for="max_lines">Max Log Lines:</label>
                                <input type="number" id="max_lines" name="max_lines"
                                       value="<%= (character && character.animatronic && character.animatronic.rpi_config) ? character.animatronic.rpi_config.max_lines || 1000 : 1000 %>"
                                       min="100" max="10000">
                            </div>

                            <div class="form-group">
                                <label for="hardware_monitoring">
                                    <input type="checkbox" id="hardware_monitoring" name="hardware_monitoring"
                                           <%= (character && character.animatronic && character.animatronic.hardware_monitoring) ? 'checked' : '' %>>
                                    Enable Hardware Monitoring
                                </label>
                            </div>

                            <!-- SSH Test Button -->
                            <div class="form-group">
                                <button type="button" id="test_ssh" class="button secondary-btn">üîç Test SSH Connection</button>
                                <div id="ssh_test_result" style="margin-top: 10px;"></div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label>Parts:</label>
                        <div class="dual-select">
                            <div class="select-container">
                                <label class="select-label">Available Parts</label>
                                <select id="available-parts" multiple>
                                    <% parts.forEach(function(part) { %>
                                        <% if (!part.characterId || (character && character.id && part.characterId !== character.id)) { %>
                                            <option value="<%= part.id %>"><%= part.name %></option>
                                        <% } %>
                                    <% }); %>
                                </select>
                            </div>
                            <div class="dual-select-controls">
                                <button type="button" onclick="moveSelectedOptions('available-parts', 'assigned-parts')">></button>
                                <button type="button" onclick="moveSelectedOptions('assigned-parts', 'available-parts')"><</button>
                            </div>
                            <div class="select-container">
                                <label class="select-label">Assigned Parts</label>
                                <select id="assigned-parts" name="parts[]" multiple>
                                    <% if (character && character.id) { %>
                                        <% parts.forEach(function(part) { %>
                                            <% if (part.characterId === character.id) { %>
                                                <option value="<%= part.id %>" selected><%= part.name %></option>
                                            <% } %>
                                        <% }); %>
                                    <% } %>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label>Sounds:</label>
                        <div class="dual-select">
                            <div class="select-container">
                                <label class="select-label">Available Sounds</label>
                                <select id="available-sounds" multiple>
                                    <% sounds.forEach(function(sound) { %>
                                        <% if (!(sound.characterIds && sound.characterIds.includes(character.id))) { %>
                                            <option value="<%= sound.id %>"><%= sound.name %></option>
                                        <% } %>
                                    <% }); %>
                                </select>
                            </div>
                            <div class="dual-select-controls">
                                <button type="button" onclick="moveSelectedOptions('available-sounds', 'assigned-sounds')">></button>
                                <button type="button" onclick="moveSelectedOptions('assigned-sounds', 'available-sounds')"><</button>
                            </div>
                            <div class="select-container">
                                <label class="select-label">Assigned Sounds</label>
                                <select id="assigned-sounds" name="sounds[]" multiple>
                                    <% if (character && character.id) { %>
                                        <% sounds.forEach(function(sound) { %>
                                            <% if (sound.characterIds && sound.characterIds.includes(character.id)) { %>
                                                <option value="<%= sound.id %>" selected><%= sound.name %></option>
                                            <% } %>
                                        <% }); %>
                                    <% } %>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="button-group">
                        <button type="submit" class="button primary-btn">Save Character</button>
                        <a href="/characters" class="button secondary-btn">Cancel</a>
                    </div>
                </div>
            </div>
        </form>
    </main>

    <script>
        // Add preview functionality for image upload
        const imageInput = document.getElementById('character_image');
        const imagePreview = document.querySelector('.image-preview');

        imageInput.addEventListener('change', function(e) {
            if (e.target.files && e.target.files[0]) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    if (imagePreview.tagName.toLowerCase() === 'img') {
                        imagePreview.src = e.target.result;
                    } else {
                        // Replace the div with an img element
                        const img = document.createElement('img');
                        img.src = e.target.result;
                        img.className = 'image-preview';
                        img.alt = 'Character image';
                        imagePreview.parentNode.replaceChild(img, imagePreview);
                    }
                    
                    // Display file name next to the Upload Picture button
                    const fileName = e.target.files[0].name;
                    document.querySelector('.custom-file-upload').innerHTML = `Selected: ${fileName.length > 15 ? fileName.substring(0, 12) + '...' : fileName}`;
                }
                reader.readAsDataURL(e.target.files[0]);
            }
        });

        function moveSelectedOptions(fromSelectId, toSelectId) {
            const fromSelect = document.getElementById(fromSelectId);
            const toSelect = document.getElementById(toSelectId);
            
            for (let option of fromSelect.selectedOptions) {
                toSelect.appendChild(option.cloneNode(true));
                fromSelect.remove(option.index);
            }
        }

        // Animatronic configuration toggle
        const animatronicEnabled = document.getElementById('animatronic_enabled');
        const animatronicConfig = document.getElementById('animatronic_config');

        if (animatronicEnabled) {
            animatronicEnabled.addEventListener('change', function() {
                if (this.checked) {
                    animatronicConfig.style.display = 'block';
                } else {
                    animatronicConfig.style.display = 'none';
                }
            });
        }

        // SSH Test functionality
        const testSSHButton = document.getElementById('test_ssh');
        const sshTestResult = document.getElementById('ssh_test_result');

        if (testSSHButton) {
            testSSHButton.addEventListener('click', async function() {
                const host = document.getElementById('rpi_host').value;
                const user = document.getElementById('rpi_user').value;
                const passwordEnv = document.getElementById('password_env').value;

                if (!host || !user) {
                    sshTestResult.innerHTML = '<span style="color: #ff0000;">‚ùå Please fill in IP address and SSH user</span>';
                    return;
                }

                sshTestResult.innerHTML = '<span style="color: #ffff00;">üîç Testing SSH connection...</span>';
                testSSHButton.disabled = true;

                try {
                    const response = await fetch('/characters/test-ssh', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            host: host,
                            user: user,
                            passwordEnv: passwordEnv
                        })
                    });

                    const result = await response.json();

                    if (result.success) {
                        sshTestResult.innerHTML = '<span style="color: #00ff00;">‚úÖ SSH connection successful!</span>';
                    } else {
                        sshTestResult.innerHTML = `<span style="color: #ff0000;">‚ùå SSH connection failed: ${result.error}</span>`;
                    }
                } catch (error) {
                    sshTestResult.innerHTML = `<span style="color: #ff0000;">‚ùå Test failed: ${error.message}</span>`;
                } finally {
                    testSSHButton.disabled = false;
                }
            });
        }

        // Form submission handling
        const form = document.querySelector('form');
        if (form) {
            form.onsubmit = function() {
                const assignedParts = document.getElementById('assigned-parts');
                const assignedSounds = document.getElementById('assigned-sounds');

                if (assignedParts) {
                    for (let option of assignedParts.options) {
                        option.selected = true;
                    }
                }

                if (assignedSounds) {
                    for (let option of assignedSounds.options) {
                        option.selected = true;
                    }
                }

                return true;
            };
        }
    </script>
</body>
</html>
