<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="/css/style.css">
    <style>
        .form-actions {
            display: flex;
            justify-content: flex-start;
            gap: 10px;
            margin-top: 20px;
        }
        .form-actions .button {
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
            text-align: center;
            min-width: 150px;
        }
    </style>
</head>
<body>
    <h1><%= title %></h1>
    <form id="sceneForm" action="<%= action %>" method="POST">
        <input type="hidden" name="character_id" value="<%= character.id %>">
        
        <label for="scene_name">Scene Name:</label>
        <input type="text" id="scene_name" name="scene_name" value="<%= scene.scene_name || '' %>" required>

        <h2>Steps</h2>
        <div id="steps" class="sortable">
            <% (scene.steps || []).forEach(function(step, index) { %>
                <%- include('partials/step', { step, index, parts, sounds }) %>
            <% }); %>
        </div>
        
        <button type="button" onclick="addStep('motor')">Add Motor</button>
        <button type="button" onclick="addStep('linear-actuator')">Add Linear Actuator</button>
        <button type="button" onclick="addStep('servo')">Add Servo</button>
        <button type="button" onclick="addStep('led')">Add LED</button>
        <button type="button" onclick="addStep('light')">Add Light</button>
        <button type="button" onclick="addStep('sensor')">Add Sensor</button>
        <button type="button" onclick="addStep('sound')">Add Sound</button>
        <button type="button" onclick="addStep('pause')">Add Pause</button>
        
        <div class="form-actions">
            <button type="submit" class="button">Save Scene</button>
            <a href="/scenes?characterId=<%= character.id %>" class="button">Back to Scenes</a>
        </div>
    </form>

    <script>
        const characterId = '<%= character.id %>';

        $(document).ready(function() {
            $(".sortable").sortable({
                update: function(event, ui) {
                    updateStepNumbers();
                }
            });

            // Event delegation for remove and copy buttons
            $('#steps').on('click', '.remove-step', function() {
                removeStep($(this).data('index'));
            });

            $('#steps').on('click', '.copy-step', function() {
                copyStep($(this).data('index'));
            });
        });

        function addStep(type) {
            const steps = document.getElementById('steps');
            const stepCount = steps.children.length;
            
            $.get('/scenes/step-template', { type: type, index: stepCount, characterId: characterId }, function(html) {
                const newStep = document.createElement('div');
                newStep.innerHTML = html;
                steps.appendChild(newStep.firstChild);
                updateStepNumbers();
            });
        }

        function removeStep(index) {
            const steps = document.getElementById('steps');
            steps.removeChild(steps.children[index]);
            updateStepNumbers();
        }

        function copyStep(index) {
            const steps = document.getElementById('steps');
            const originalStep = steps.children[index];
            const newStep = originalStep.cloneNode(true);
            const newIndex = steps.children.length;

            // Update the step number and type
            const stepType = newStep.querySelector('input[name$="[type]"]').value;
            newStep.querySelector('h3').textContent = `Step ${newIndex + 1}: ${stepType.charAt(0).toUpperCase() + stepType.slice(1)}`;

            // Update the data-index attribute
            newStep.dataset.index = newIndex;

            // Update the name attribute of all inputs and selects
            newStep.querySelectorAll('input, select').forEach(element => {
                if (element.name) {
                    element.name = element.name.replace(/steps\[\d+\]/, `steps[${newIndex}]`);
                }
            });

            // Update the data-index attribute of the buttons
            newStep.querySelector('.remove-step').dataset.index = newIndex;
            newStep.querySelector('.copy-step').dataset.index = newIndex;

            // Append the new step to the steps container
            steps.appendChild(newStep);

            // Update the step name to indicate it's a copy
            const nameInput = newStep.querySelector('input[name$="[name]"]');
            nameInput.value = nameInput.value + ' (Copy)';

            updateStepNumbers();
        }

        function updateStepNumbers() {
            const steps = document.getElementById('steps').children;
            for (let i = 0; i < steps.length; i++) {
                const stepType = steps[i].querySelector('input[name$="[type]"]').value;
                steps[i].querySelector('h3').textContent = `Step ${i + 1}: ${stepType.charAt(0).toUpperCase() + stepType.slice(1)}`;
                steps[i].dataset.index = i;
                updateStepInputNames(steps[i], i);
                steps[i].querySelector('.remove-step').dataset.index = i;
                steps[i].querySelector('.copy-step').dataset.index = i;
            }
        }		

        function updateStepInputNames(stepElement, newIndex) {
            const inputs = stepElement.querySelectorAll('input, select');
            inputs.forEach(input => {
                const name = input.getAttribute('name');
                if (name) {
                    input.setAttribute('name', name.replace(/steps\[\d+\]/, `steps[${newIndex}]`));
                }
            });
        }

        // Ensure all steps are included when submitting the form
        document.getElementById('sceneForm').onsubmit = function(event) {
            event.preventDefault();
            updateStepNumbers();
            
            // Serialize form data
            const formData = new FormData(this);
            
            // Add steps data
            $('#steps > div').each(function(index) {
                $(this).find('input, select').each(function() {
                    formData.append(`steps[${index}][${this.name.match(/\[([^\]]+)\]$/)[1]}]`, this.value);
                });
            });

            // Send form data via AJAX
            $.ajax({
                url: this.action,
                method: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function(response) {
                    window.location.href = `/scenes?characterId=${characterId}`;
                },
                error: function(xhr, status, error) {
                    console.error('Error saving scene:', error);
                    alert('Failed to save scene. Please try again.');
                }
            });

            return false;
        };
    </script>
</body>
</html>
