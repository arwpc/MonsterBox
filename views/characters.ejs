<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Creepster&display=swap">
    <link rel="stylesheet" href="/css/style.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
    <header>
        <h1 class="landing-title"><%= title %></h1>
    </header>
    
    <main>
        <div class="button-group">
            <a href="/characters/new" class="button primary-btn">Add New Character</a>
            <a href="/" class="button secondary-btn">Back to Main Menu</a>
        </div>

        <div class="table-container">
            <table>
                <thead>
                    <tr>
                        <th>Image</th>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Animatronic Status</th>
                        <th>Parts</th>
                        <th>Sounds</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% for(let character of characters) { %>
                        <tr>
                            <td>
                                <% if (character.image) { %>
                                    <img src="/images/characters/<%= character.image %>" alt="<%= character.char_name %>" style="max-width: 100px;">
                                <% } else { %>
                                    No Image
                                <% } %>
                            </td>
                            <td><%= character.char_name %></td>
                            <td><%= character.char_description %></td>
                            <td>
                                <% if (character.animatronic && character.animatronic.enabled) { %>
                                    <div class="animatronic-status">
                                        <%
                                        const statusIcon = character.animatronic.status === 'running' ? '🟢' :
                                                          character.animatronic.status === 'offline' ? '🔴' : '🟡';
                                        const statusColor = character.animatronic.status === 'running' ? '#00ff00' :
                                                           character.animatronic.status === 'offline' ? '#ff0000' : '#ffff00';
                                        %>
                                        <span style="color: <%= statusColor %>;">
                                            <%= statusIcon %> <%= character.animatronic.status.toUpperCase() %>
                                        </span>
                                        <% if (character.animatronic.rpi_config && character.animatronic.rpi_config.host) { %>
                                            <br><small style="color: #888;">IP: <%= character.animatronic.rpi_config.host %></small>
                                        <% } %>
                                        <div class="animatronic-controls" style="margin-top: 5px;">
                                            <button onclick="testConnection(<%= character.id %>)" class="button small-btn" title="Test Connection">🧪</button>
                                            <button onclick="collectLogs(<%= character.id %>)" class="button small-btn" title="Collect Logs">📋</button>
                                            <button onclick="showSystemInfo(<%= character.id %>)" class="button small-btn" title="System Info">📊</button>
                                            <button onclick="rebootSystem(<%= character.id %>)" class="button small-btn" title="Reboot System">🔄</button>
                                        </div>
                                    </div>
                                <% } else { %>
                                    <span style="color: #888;">Virtual Character</span>
                                <% } %>
                            </td>
                            <td>
                                <% 
                                let displayParts = [];
                                // Check parts with characterId
                                parts.forEach(function(part) {
                                    if (part.characterId === character.id) {
                                        displayParts.push(part);
                                    }
                                });
                                // Check character's parts array
                                if (character.parts && character.parts.length > 0) {
                                    parts.forEach(function(part) {
                                        if (character.parts.includes(part.id) && !displayParts.find(p => p.id === part.id)) {
                                            displayParts.push(part);
                                        }
                                    });
                                }
                                displayParts.forEach(function(part) { 
                                %>
                                    <%= part.name %><br>
                                <% }); %>
                            </td>
                            <td>
                                <% 
                                let displaySounds = [];
                                // Check sounds with characterIds array
                                sounds.forEach(function(sound) {
                                    if (sound.characterIds && sound.characterIds.includes(character.id)) {
                                        displaySounds.push(sound);
                                    }
                                });
                                // Check character's sounds array
                                if (character.sounds && character.sounds.length > 0) {
                                    sounds.forEach(function(sound) {
                                        if (character.sounds.includes(sound.id) && !displaySounds.find(s => s.id === sound.id)) {
                                            displaySounds.push(sound);
                                        }
                                    });
                                }
                                displaySounds.forEach(function(sound) { 
                                %>
                                    <%= sound.name %><br>
                                <% }); %>
                            </td>
                            <td>
                                <div class="button-group">
                                    <a href="/characters/<%= character.id %>/edit" class="button">Edit</a>
                                    <button onclick="deleteCharacter(<%= character.id %>)" class="button">Delete</button>
                                </div>
                            </td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
    </main>

    <!-- Modal for displaying results -->
    <div id="resultModal" class="modal" style="display: none;">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <h2 id="modalTitle">Result</h2>
            <div id="modalBody"></div>
        </div>
    </div>

    <style>
        .modal {
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.8);
        }

        .modal-content {
            background-color: #000;
            border: 2px solid #00ff00;
            margin: 5% auto;
            padding: 20px;
            width: 80%;
            max-width: 800px;
            border-radius: 5px;
            color: #00ff00;
            max-height: 80vh;
            overflow-y: auto;
        }

        .close {
            color: #ff0000;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

        .close:hover {
            color: #ff6666;
        }

        .small-btn {
            padding: 2px 6px;
            font-size: 12px;
            margin: 1px;
            min-width: 25px;
        }

        .animatronic-status {
            font-size: 12px;
        }

        .animatronic-controls {
            display: flex;
            gap: 2px;
            flex-wrap: wrap;
        }

        .test-result {
            margin: 10px 0;
            padding: 10px;
            border: 1px solid #333;
            border-radius: 3px;
        }

        .test-passed {
            border-color: #00ff00;
            background-color: rgba(0, 255, 0, 0.1);
        }

        .test-failed {
            border-color: #ff0000;
            background-color: rgba(255, 0, 0, 0.1);
        }

        .log-section {
            margin: 10px 0;
            padding: 10px;
            border: 1px solid #333;
            border-radius: 3px;
            background-color: rgba(0, 0, 0, 0.3);
        }

        .log-content {
            font-family: monospace;
            font-size: 11px;
            white-space: pre-wrap;
            max-height: 200px;
            overflow-y: auto;
            background-color: #111;
            padding: 5px;
            border: 1px solid #333;
        }
    </style>

    <script>
        function deleteCharacter(id) {
            if (confirm('Are you sure you want to delete this character?')) {
                $.post('/characters/' + id + '/delete')
                    .done(function() {
                        location.reload();
                    })
                    .fail(function(xhr, status, error) {
                        console.error('Error details:', xhr.responseText);
                        alert('Error deleting character: ' + xhr.status + ' ' + xhr.statusText);
                    });
            }
        }

        function closeModal() {
            document.getElementById('resultModal').style.display = 'none';
        }

        function showModal(title, content) {
            document.getElementById('modalTitle').textContent = title;
            document.getElementById('modalBody').innerHTML = content;
            document.getElementById('resultModal').style.display = 'block';
        }

        function testConnection(characterId) {
            showModal('Testing Connection...', '<p>Testing animatronic connection, please wait...</p>');

            $.post('/characters/' + characterId + '/test-connection')
                .done(function(response) {
                    if (response.success) {
                        const result = response.result;
                        let html = '<h3>Connection Test Results for ' + result.character + '</h3>';
                        html += '<p><strong>Host:</strong> ' + result.host + '</p>';
                        html += '<p><strong>Timestamp:</strong> ' + new Date(result.timestamp).toLocaleString() + '</p>';

                        // Ping test
                        const pingClass = result.tests.ping.passed ? 'test-passed' : 'test-failed';
                        html += '<div class="test-result ' + pingClass + '">';
                        html += '<h4>🌐 Network Connectivity (Ping)</h4>';
                        html += '<p><strong>Status:</strong> ' + (result.tests.ping.passed ? '✅ PASSED' : '❌ FAILED') + '</p>';
                        html += '<p><strong>Message:</strong> ' + result.tests.ping.message + '</p>';
                        html += '<p><strong>Duration:</strong> ' + result.tests.ping.duration + 'ms</p>';
                        html += '</div>';

                        // SSH test
                        const sshClass = result.tests.ssh.passed ? 'test-passed' : 'test-failed';
                        html += '<div class="test-result ' + sshClass + '">';
                        html += '<h4>🔐 SSH Connection</h4>';
                        html += '<p><strong>Status:</strong> ' + (result.tests.ssh.passed ? '✅ PASSED' : '❌ FAILED') + '</p>';
                        html += '<p><strong>Message:</strong> ' + result.tests.ssh.message + '</p>';
                        html += '<p><strong>Duration:</strong> ' + result.tests.ssh.duration + 'ms</p>';
                        html += '</div>';

                        // Log test
                        const logClass = result.tests.logs.passed ? 'test-passed' : 'test-failed';
                        html += '<div class="test-result ' + logClass + '">';
                        html += '<h4>📋 Log Collection</h4>';
                        html += '<p><strong>Status:</strong> ' + (result.tests.logs.passed ? '✅ PASSED' : '❌ FAILED') + '</p>';
                        html += '<p><strong>Message:</strong> ' + result.tests.logs.message + '</p>';
                        html += '<p><strong>Duration:</strong> ' + result.tests.logs.duration + 'ms</p>';
                        if (result.tests.logs.sampleLogs) {
                            html += '<p><strong>Sample Logs:</strong></p>';
                            html += '<div class="log-content">' + result.tests.logs.sampleLogs + '</div>';
                        }
                        html += '</div>';

                        showModal('Connection Test Results', html);
                    } else {
                        showModal('Connection Test Failed', '<p style="color: #ff0000;">❌ ' + response.error + '</p>');
                    }
                })
                .fail(function(xhr) {
                    showModal('Connection Test Error', '<p style="color: #ff0000;">❌ Error: ' + xhr.responseText + '</p>');
                });
        }

        function collectLogs(characterId) {
            showModal('Collecting Logs...', '<p>Collecting logs from animatronic, please wait...</p>');

            $.post('/characters/' + characterId + '/collect-logs', {
                lines: 50,
                logTypes: ['system', 'auth', 'kernel']
            })
                .done(function(response) {
                    if (response.success) {
                        const result = response.result;
                        let html = '<h3>Log Collection Results for ' + result.character + '</h3>';
                        html += '<p><strong>Host:</strong> ' + result.host + '</p>';
                        html += '<p><strong>Timestamp:</strong> ' + new Date(result.timestamp).toLocaleString() + '</p>';

                        Object.keys(result.logs).forEach(logType => {
                            const log = result.logs[logType];
                            const logClass = log.success ? 'test-passed' : 'test-failed';
                            html += '<div class="log-section ' + logClass + '">';
                            html += '<h4>📋 ' + logType.toUpperCase() + ' Logs</h4>';
                            if (log.success) {
                                html += '<p><strong>Status:</strong> ✅ SUCCESS</p>';
                                html += '<div class="log-content">' + log.data + '</div>';
                            } else {
                                html += '<p><strong>Status:</strong> ❌ FAILED</p>';
                                html += '<p><strong>Error:</strong> ' + log.error + '</p>';
                            }
                            html += '</div>';
                        });

                        showModal('Log Collection Results', html);
                    } else {
                        showModal('Log Collection Failed', '<p style="color: #ff0000;">❌ ' + response.error + '</p>');
                    }
                })
                .fail(function(xhr) {
                    showModal('Log Collection Error', '<p style="color: #ff0000;">❌ Error: ' + xhr.responseText + '</p>');
                });
        }

        function showSystemInfo(characterId) {
            showModal('Getting System Info...', '<p>Retrieving system information, please wait...</p>');

            $.get('/characters/' + characterId + '/system-info')
                .done(function(response) {
                    if (response.success) {
                        const result = response.result;
                        const info = result.systemInfo;
                        let html = '<h3>System Information for ' + result.character + '</h3>';
                        html += '<p><strong>Host:</strong> ' + result.host + '</p>';
                        html += '<p><strong>Timestamp:</strong> ' + new Date(result.timestamp).toLocaleString() + '</p>';

                        html += '<div class="test-result test-passed">';
                        html += '<h4>🖥️ System Details</h4>';
                        html += '<p><strong>Platform:</strong> ' + info.platform + '</p>';
                        html += '<p><strong>Architecture:</strong> ' + info.arch + '</p>';
                        html += '<p><strong>Hostname:</strong> ' + info.hostname + '</p>';
                        html += '<p><strong>Uptime:</strong> ' + info.uptime + '</p>';
                        html += '</div>';

                        html += '<div class="test-result test-passed">';
                        html += '<h4>💾 Memory & Storage</h4>';
                        html += '<p><strong>Total Memory:</strong> ' + info.totalMem + '</p>';
                        html += '<p><strong>Used Memory:</strong> ' + info.usedMem + '</p>';
                        html += '<p><strong>Free Memory:</strong> ' + info.freeMem + '</p>';
                        html += '<p><strong>Disk Usage:</strong> ' + info.diskUsage + '</p>';
                        html += '<p><strong>Disk Free:</strong> ' + info.diskFree + '</p>';
                        html += '</div>';

                        html += '<div class="test-result test-passed">';
                        html += '<h4>⚡ Hardware Status</h4>';
                        html += '<p><strong>Temperature:</strong> ' + info.temperature + '</p>';
                        html += '<p><strong>Voltage:</strong> ' + info.voltage + '</p>';
                        html += '<p><strong>WiFi Signal:</strong> ' + info.wifiSignal + '</p>';
                        html += '</div>';

                        showModal('System Information', html);
                    } else {
                        showModal('System Info Failed', '<p style="color: #ff0000;">❌ ' + response.error + '</p>');
                    }
                })
                .fail(function(xhr) {
                    showModal('System Info Error', '<p style="color: #ff0000;">❌ Error: ' + xhr.responseText + '</p>');
                });
        }

        function rebootSystem(characterId) {
            if (confirm('Are you sure you want to reboot this animatronic system? This will disconnect all users and stop all running processes.')) {
                showModal('Rebooting System...', '<p>Sending reboot command to animatronic, please wait...</p>');

                $.post('/characters/' + characterId + '/reboot')
                    .done(function(response) {
                        if (response.success) {
                            const result = response.result;
                            let html = '<h3>Reboot Command Sent</h3>';
                            html += '<p style="color: #00ff00;">✅ ' + result.message + '</p>';
                            html += '<p><strong>Timestamp:</strong> ' + new Date(result.timestamp).toLocaleString() + '</p>';
                            html += '<p><em>The system should be back online in 1-2 minutes.</em></p>';

                            showModal('System Reboot', html);
                        } else {
                            showModal('Reboot Failed', '<p style="color: #ff0000;">❌ ' + response.error + '</p>');
                        }
                    })
                    .fail(function(xhr) {
                        showModal('Reboot Error', '<p style="color: #ff0000;">❌ Error: ' + xhr.responseText + '</p>');
                    });
            }
        }

        // Close modal when clicking outside of it
        window.onclick = function(event) {
            const modal = document.getElementById('resultModal');
            if (event.target == modal) {
                closeModal();
            }
        }
    </script>
</body>
</html>
