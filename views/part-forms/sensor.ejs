<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Creepster&display=swap">
    <link rel="stylesheet" href="/css/style.css">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <style>
        .motion-detected {
            color: #ff0000;
            text-shadow: 0 0 5px #ff0000;
            font-family: 'Creepster', cursive;
            font-size: 1.2em;
        }
    </style>
</head>
<body>
    <header>
        <h1 class="landing-title"><%= title %></h1>
    </header>

    <main>
        <form action="<%= action %>" method="POST">
            <input type="hidden" name="type" value="sensor">
            <% if (part.id) { %>
                <input type="hidden" name="id" value="<%= part.id %>">
            <% } %>
            
            <div class="form-group">
                <label for="name">Part Name:</label>
                <input type="text" id="name" name="name" value="<%= part.name || '' %>" required>
            </div>

            <div class="form-group">
                <label for="characterId">Character:</label>
                <select id="characterId" name="characterId" required>
                    <% characters.forEach(function(character) { %>
                        <option value="<%= character.id %>" <%= (part.characterId === character.id) ? 'selected' : '' %>>
                            <%= character.char_name %>
                        </option>
                    <% }); %>
                </select>
            </div>

            <div class="form-group">
                <label for="sensorType">Sensor Type:</label>
                <select id="sensorType" name="sensorType" required>
                    <option value="motion" <%= part.sensorType === 'motion' ? 'selected' : '' %>>Motion</option>
                    <option value="sound" <%= part.sensorType === 'sound' ? 'selected' : '' %>>Sound</option>
                </select>
            </div>

            <div class="form-group">
                <label for="gpioPin">GPIO Pin:</label>
                <input type="number" id="gpioPin" name="gpioPin" value="<%= part.gpioPin || '' %>" required>
            </div>

            <div class="form-group">
                <label class="checkbox-label" for="active">
                    <input type="checkbox" id="active" name="active" <%= part.active ? 'checked' : '' %>>
                    Active
                </label>
            </div>

            <div class="button-group">
                <button type="submit" class="button primary-btn">Save Part</button>
            </div>
        </form>

        <div id="sensorControl" class="config-section">
            <h2>Sensor Control</h2>
            <p id="statusText">Sensor status: Not active</p>
            
            <div class="button-group">
                <button id="sensorOn" class="button">Sensor On</button>
                <button id="sensorOff" class="button" disabled>Sensor Off</button>
            </div>

            <div id="testResults" class="info-list"></div>
        </div>

        <div class="button-group">
            <a href="/parts?characterId=<%= character.id %>" class="button secondary-btn">Back to Parts</a>
        </div>
    </main>

    <script>
        let eventSource;

        function updateSensorStatus(status) {
            const statusText = document.getElementById('statusText');
            statusText.textContent = 'Sensor status: ' + status;

            if (status === 'Motion Detected') {
                statusText.classList.add('motion-detected');
            } else {
                statusText.classList.remove('motion-detected');
            }
        }

        function startSensor() {
            const gpioPin = document.getElementById('gpioPin').value;
            const sensorType = document.getElementById('sensorType').value;

            eventSource = new EventSource(`/parts/sensor/control?id=<%= part.id || '' %>&gpioPin=${gpioPin}&sensorType=${sensorType}&action=start`);

            eventSource.onmessage = function(event) {
                try {
                    const data = JSON.parse(event.data);
                    if (data.status) {
                        updateSensorStatus(data.status);
                        document.getElementById('testResults').textContent = data.status;
                    } else if (data.error) {
                        console.error('Error:', data.error);
                        updateSensorStatus('Error: ' + data.error);
                        document.getElementById('testResults').textContent = 'Sensor control failed: ' + data.error;
                        document.getElementById('testResults').classList.add('error-message');
                        stopSensor();
                    }
                } catch (error) {
                    console.error('Error parsing event data:', error);
                }
            };

            eventSource.onerror = function(event) {
                console.error('EventSource failed:', event);
                updateSensorStatus('Error: EventSource failed');
                document.getElementById('testResults').textContent = 'Sensor control failed: EventSource error';
                document.getElementById('testResults').classList.add('error-message');
                stopSensor();
            };

            document.getElementById('sensorOn').disabled = true;
            document.getElementById('sensorOff').disabled = false;
        }

        function stopSensor() {
            if (eventSource) {
                eventSource.close();
            }

            const sensorId = '<%= part.id || "" %>';
            const gpioPin = document.getElementById('gpioPin').value;
            const sensorType = document.getElementById('sensorType').value;

            if (!sensorId) {
                console.error('Cannot stop sensor: Invalid sensor ID');
                updateSensorStatus('Error: Invalid sensor ID');
                document.getElementById('testResults').textContent = 'Failed to stop sensor: Invalid sensor ID';
                document.getElementById('testResults').classList.add('error-message');
                document.getElementById('sensorOn').disabled = false;
                document.getElementById('sensorOff').disabled = true;
                return;
            }

            axios.post('/parts/sensor/control', {
                id: sensorId,
                gpioPin: gpioPin,
                sensorType: sensorType,
                action: 'stop'
            })
            .then(function(response) {
                console.log('Sensor stop response:', response.data);
                updateSensorStatus('Sensor stopped');
                document.getElementById('testResults').textContent = 'Sensor stopped successfully';
                document.getElementById('testResults').classList.remove('error-message');
            })
            .catch(function(error) {
                console.error('Error stopping sensor:', error);
                console.error('Error response:', error.response);
                let errorMessage = 'Failed to stop sensor';
                if (error.response && error.response.data && error.response.data.error) {
                    errorMessage += ': ' + error.response.data.error;
                } else if (error.message) {
                    errorMessage += ': ' + error.message;
                }
                updateSensorStatus('Error stopping sensor');
                document.getElementById('testResults').textContent = errorMessage;
                document.getElementById('testResults').classList.add('error-message');
            })
            .finally(function() {
                document.getElementById('sensorOn').disabled = false;
                document.getElementById('sensorOff').disabled = true;
            });
        }

        document.getElementById('sensorOn').addEventListener('click', startSensor);
        document.getElementById('sensorOff').addEventListener('click', stopSensor);

        document.getElementById('sensorType').addEventListener('change', function() {
            if (this.value === 'sound') {
                document.getElementById('gpioPin').disabled = true;
            } else {
                document.getElementById('gpioPin').disabled = false;
            }
        });

        // Trigger change event on page load
        document.getElementById('sensorType').dispatchEvent(new Event('change'));

        // Disable sensor control buttons if GPIO pin is not set (for new sensors)
        function updateSensorControlButtonState() {
            const gpioPin = document.getElementById('gpioPin').value;
            const isSoundSensor = document.getElementById('sensorType').value === 'sound';
            document.getElementById('sensorOn').disabled = !gpioPin && !isSoundSensor;
        }

        document.getElementById('gpioPin').addEventListener('input', updateSensorControlButtonState);
        document.getElementById('sensorType').addEventListener('change', updateSensorControlButtonState);

        // Initial state
        updateSensorControlButtonState();
    </script>
</body>
</html>
