<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/style.css">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Creepster&display=swap');

        .motion-detected {
            color: red;
            font-family: 'Creepster', cursive;
            font-size: 1.2em;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
        }
    </style>
</head>
<body>
    <h1><%= title %></h1>
    <form action="<%= action %>" method="POST">
        <input type="hidden" name="type" value="sensor">
        <% if (part.id) { %>
            <input type="hidden" name="id" value="<%= part.id %>">
        <% } %>
        <div>
            <label for="name">Part Name:</label>
            <input type="text" id="name" name="name" value="<%= part.name || '' %>" required>
        </div>
        <div>
            <label for="characterId">Character:</label>
            <select id="characterId" name="characterId" required>
                <% characters.forEach(function(character) { %>
                    <option value="<%= character.id %>" <%= (part.characterId === character.id) ? 'selected' : '' %>>
                        <%= character.char_name %>
                    </option>
                <% }); %>
            </select>
        </div>
        <div>
            <label for="sensorType">Sensor Type:</label>
            <select id="sensorType" name="sensorType" required>
                <option value="motion" <%= part.sensorType === 'motion' ? 'selected' : '' %>>Motion</option>
                <option value="sound" <%= part.sensorType === 'sound' ? 'selected' : '' %>>Sound</option>
            </select>
        </div>
        <div>
            <label for="gpioPin">GPIO Pin:</label>
            <input type="number" id="gpioPin" name="gpioPin" value="<%= part.gpioPin || '' %>" required>
        </div>
        <div>
            <label for="active">
                <input type="checkbox" id="active" name="active" <%= part.active ? 'checked' : '' %>>
                Active
            </label>
        </div>
        <button type="submit">Save Part</button>
    </form>

    <div id="sensorControl" style="margin-top: 20px;">
        <h2>Sensor Control</h2>
        <p id="statusText">Sensor status: Not active</p>
        <button id="sensorOn">Sensor On</button>
        <button id="sensorOff" disabled>Sensor Off</button>
        <div id="testResults" style="margin-top: 10px;"></div>
    </div>

    <a href="/parts?characterId=<%= character.id %>" class="button">Back to Parts</a>

    <script>
        let eventSource;

        function updateSensorStatus(status) {
            const statusText = document.getElementById('statusText');
            statusText.textContent = 'Sensor status: ' + status;

            if (status.includes('Motion detected') || status.includes('Sound detected')) {
                statusText.classList.add('motion-detected');
            } else {
                statusText.classList.remove('motion-detected');
            }
        }

        function startSensor() {
            const gpioPin = document.getElementById('gpioPin').value;
            const sensorType = document.getElementById('sensorType').value;

            eventSource = new EventSource(`/parts/sensor/control?id=<%= part.id || 'null' %>&gpioPin=${gpioPin}&sensorType=${sensorType}&action=start`);

            eventSource.onmessage = function(event) {
                const data = JSON.parse(event.data);
                if (data.status) {
                    updateSensorStatus(data.status);
                    document.getElementById('testResults').textContent = data.status;
                } else if (data.error) {
                    console.error('Error:', data.error);
                    updateSensorStatus('Error: ' + data.error);
                    document.getElementById('testResults').textContent = 'Sensor control failed: ' + data.error;
                    stopSensor();
                }
            };

            eventSource.onerror = function(event) {
                console.error('EventSource failed:', event);
                updateSensorStatus('Error: EventSource failed');
                document.getElementById('testResults').textContent = 'Sensor control failed: EventSource error';
                stopSensor();
            };

            document.getElementById('sensorOn').disabled = true;
            document.getElementById('sensorOff').disabled = false;
        }

        function stopSensor() {
            if (eventSource) {
                eventSource.close();
            }

            axios.post('/parts/sensor/control', {
                id: '<%= part.id || "null" %>',
                gpioPin: document.getElementById('gpioPin').value,
                sensorType: document.getElementById('sensorType').value,
                action: 'stop'
            })
            .then(function(response) {
                updateSensorStatus('Sensor stopped');
                document.getElementById('testResults').textContent = 'Sensor stopped successfully';
            })
            .catch(function(error) {
                console.error('Error stopping sensor:', error);
                updateSensorStatus('Error stopping sensor');
                document.getElementById('testResults').textContent = 'Failed to stop sensor: ' + error.message;
            })
            .finally(function() {
                document.getElementById('sensorOn').disabled = false;
                document.getElementById('sensorOff').disabled = true;
            });
        }

        document.getElementById('sensorOn').addEventListener('click', startSensor);
        document.getElementById('sensorOff').addEventListener('click', stopSensor);

        document.getElementById('sensorType').addEventListener('change', function() {
            if (this.value === 'sound') {
                document.getElementById('gpioPin').disabled = true;
            } else {
                document.getElementById('gpioPin').disabled = false;
            }
        });

        // Trigger change event on page load
        document.getElementById('sensorType').dispatchEvent(new Event('change'));

        // Disable sensor control buttons if GPIO pin is not set (for new sensors)
        function updateSensorControlButtonState() {
            const gpioPin = document.getElementById('gpioPin').value;
            const isSoundSensor = document.getElementById('sensorType').value === 'sound';
            document.getElementById('sensorOn').disabled = !gpioPin && !isSoundSensor;
        }

        document.getElementById('gpioPin').addEventListener('input', updateSensorControlButtonState);
        document.getElementById('sensorType').addEventListener('change', updateSensorControlButtonState);

        // Initial state
        updateSensorControlButtonState();
    </script>
</body>
</html>
