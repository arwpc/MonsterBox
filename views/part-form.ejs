<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/style.css">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>
<body>
    <h1><%= title %></h1>
    <form action="<%= action %>?characterId=<%= character.id %>" method="POST">
        <% if (part.id) { %>
            <input type="hidden" name="id" value="<%= part.id %>">
        <% } %>
        <input type="hidden" name="characterId" value="<%= character.id %>">
        <div>
            <label for="name">Part Name:</label>
            <input type="text" id="name" name="name" value="<%= part.name || '' %>" required>
        </div>
        <div>
            <label for="type">Type:</label>
            <select id="type" name="type" required onchange="toggleInputs()">
                <option value="motor" <%= part.type === 'motor' ? 'selected' : '' %>>Motor</option>
                <option value="light" <%= part.type === 'light' ? 'selected' : '' %>>Light</option>
                <option value="led" <%= part.type === 'led' ? 'selected' : '' %>>LED</option>
                <option value="servo" <%= part.type === 'servo' ? 'selected' : '' %>>Servo</option>
                <option value="sensor" <%= part.type === 'sensor' ? 'selected' : '' %>>Sensor</option>
                <option value="linear-actuator" <%= part.type === 'linear-actuator' ? 'selected' : '' %>>Linear Actuator</option>
            </select>
        </div>
        <div>
            <label for="characterId">Character:</label>
            <select id="characterId" name="characterId" required disabled>
                <option value="<%= character.id %>" selected><%= character.char_name %></option>
            </select>
        </div>
        <div id="motorInputs" style="display: none;">
            <div>
                <label for="directionPin">Direction Pin:</label>
                <input type="number" id="directionPin" name="directionPin" value="<%= part.directionPin || '' %>">
            </div>
            <div>
                <label for="pwmPin">PWM Pin:</label>
                <input type="number" id="pwmPin" name="pwmPin" value="<%= part.pwmPin || '' %>">
            </div>
        </div>
        <div id="singlePinInputs" style="display: none;">
            <div>
                <label for="gpioPin">GPIO Pin:</label>
                <input type="number" id="gpioPin" name="gpioPin" value="<%= part.gpioPin || '' %>">
            </div>
        </div>
        <div id="sensorInputs" style="display: none;">
            <div>
                <label for="sensorType">Sensor Type:</label>
                <select id="sensorType" name="sensorType">
                    <option value="motion" <%= part.sensorType === 'motion' ? 'selected' : '' %>>Motion</option>
                    <option value="sound" <%= part.sensorType === 'sound' ? 'selected' : '' %>>Sound</option>
                </select>
            </div>
            <div>
                <label for="gpioPin">GPIO Pin:</label>
                <input type="number" id="gpioPin" name="gpioPin" value="<%= part.gpioPin || '' %>">
            </div>
        </div>
        <div id="ledInputs" style="display: none;">
            <div>
                <label for="gpioPin">GPIO Pin:</label>
                <input type="number" id="gpioPin" name="gpioPin" value="<%= part.gpioPin || '' %>" min="0" max="40">
            </div>
            <div>
                <label for="duration">Duration (ms):</label>
                <input type="number" id="duration" name="duration" value="<%= part.duration || '' %>" min="0">
            </div>
        </div>
        <div id="servoInputs" style="display: none;">
            <div>
                <label for="gpioPin">GPIO Pin:</label>
                <input type="number" id="gpioPin" name="gpioPin" value="<%= part.gpioPin || '' %>">
            </div>
            <div>
                <label for="pwmFrequency">PWM Frequency (Hz):</label>
                <input type="number" id="pwmFrequency" name="pwmFrequency" value="<%= part.pwmFrequency || '' %>">
            </div>
            <div>
                <label for="dutyCycle">Duty Cycle (%):</label>
                <input type="number" id="dutyCycle" name="dutyCycle" value="<%= part.dutyCycle || '' %>" min="0" max="100">
            </div>
        </div>
        <button type="submit">Save Part</button>
        <button type="button" id="testPartButton" onclick="testPart()">Test Part</button>
    </form>
    <div id="testArea" style="display: none;">
        <h2>Test Results</h2>
        <p id="testStatus">Not testing</p>
    </div>
    <a href="/parts?characterId=<%= character.id %>" class="button">Back to Parts</a>

    <script>
        const characterId = '<%= character.id %>';

        function toggleInputs() {
            const type = document.getElementById('type').value;
            document.getElementById('motorInputs').style.display = ['motor', 'linear-actuator'].includes(type) ? 'block' : 'none';
            document.getElementById('singlePinInputs').style.display = ['light'].includes(type) ? 'block' : 'none';
            document.getElementById('sensorInputs').style.display = type === 'sensor' ? 'block' : 'none';
            document.getElementById('ledInputs').style.display = type === 'led' ? 'block' : 'none';
            document.getElementById('servoInputs').style.display = type === 'servo' ? 'block' : 'none';
            document.getElementById('testArea').style.display = 'block';
        }

        // Call toggleInputs on page load to set initial state
        toggleInputs();

        function testPart() {
            const type = document.getElementById('type').value;
            const testStatus = document.getElementById('testStatus');
            testStatus.textContent = 'Testing...';

            let testData = { 
                type: type,
                characterId: characterId
            };

            switch (type) {
                case 'motor':
                case 'linear-actuator':
                    testData.directionPin = document.getElementById('directionPin').value;
                    testData.pwmPin = document.getElementById('pwmPin').value;
                    testData.direction = 'forward';
                    testData.speed = 50;
                    testData.duration = 1000;
                    break;
                case 'light':
                case 'led':
                    testData.gpioPin = document.getElementById('gpioPin').value;
                    testData.duration = document.getElementById('duration').value || 1000;
                    break;
                case 'servo':
                    testData.gpioPin = document.getElementById('gpioPin').value;
                    testData.pwmFrequency = document.getElementById('pwmFrequency').value;
                    testData.dutyCycle = document.getElementById('dutyCycle').value;
                    break;
                case 'sensor':
                    testData.gpioPin = document.getElementById('gpioPin').value;
                    testData.sensorType = document.getElementById('sensorType').value;
                    break;
            }

            axios.post('/parts/test?characterId=' + characterId, testData)
                .then(function (response) {
                    testStatus.textContent = 'Test completed: ' + response.data.message;
                })
                .catch(function (error) {
                    console.error('Error testing part:', error);
                    testStatus.textContent = 'Error testing part: ' + (error.response ? error.response.data : error.message);
                });
        }
    </script>
</body>
</html>
