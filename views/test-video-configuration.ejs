<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Video Configuration Component Test</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/video-configuration.css">
    <style>
        body {
            background-color: #000;
            color: #00ff00;
            font-family: 'Courier New', monospace;
            margin: 0;
            padding: 20px;
        }
        
        .test-container {
            max-width: 1200px;
            margin: 0 auto;
        }
        
        .test-header {
            text-align: center;
            margin-bottom: 30px;
            border-bottom: 2px solid #00ff00;
            padding-bottom: 20px;
        }
        
        .test-section {
            margin-bottom: 40px;
            border: 1px solid #00aa00;
            border-radius: 8px;
            padding: 20px;
            background-color: #001100;
        }
        
        .test-section h2 {
            color: #00ff00;
            margin-top: 0;
        }
        
        .character-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
            gap: 20px;
        }
        
        .character-card {
            border: 1px solid #00aa00;
            border-radius: 8px;
            padding: 15px;
            background-color: #002200;
        }
        
        .character-card h3 {
            color: #00ff00;
            margin-top: 0;
            text-align: center;
        }
        
        .test-info {
            background-color: #000044;
            border: 1px solid #0000ff;
            border-radius: 6px;
            padding: 15px;
            margin-bottom: 20px;
            color: #00ffff;
        }
        
        .test-info h4 {
            margin-top: 0;
            color: #00ffff;
        }
        
        .navigation {
            text-align: center;
            margin-bottom: 20px;
        }
        
        .navigation a {
            color: #00ff00;
            text-decoration: none;
            margin: 0 15px;
            padding: 10px 20px;
            border: 1px solid #00ff00;
            border-radius: 4px;
            display: inline-block;
            transition: all 0.3s ease;
        }
        
        .navigation a:hover {
            background-color: #004400;
            box-shadow: 0 0 10px #00ff00;
        }
    </style>
</head>
<body>
    <div class="test-container">
        <div class="test-header">
            <h1>üìπ Video Configuration Component Test</h1>
            <p>Testing the reusable video configuration component with different character scenarios</p>
        </div>

        <div class="navigation">
            <a href="/">‚Üê Back to Home</a>
            <a href="/characters">Characters</a>
            <a href="/parts">Parts</a>
        </div>

        <div class="test-info">
            <h4>üß™ Test Information</h4>
            <p>This page demonstrates the video configuration component in various states:</p>
            <ul>
                <li><strong>Character with Active Webcam:</strong> Shows full functionality with streaming controls</li>
                <li><strong>Character with Inactive Webcam:</strong> Shows configuration options without streaming</li>
                <li><strong>Character without Webcam:</strong> Shows assignment options</li>
            </ul>
            <p><strong>Note:</strong> Actual streaming functionality requires RPI4b hardware and proper webcam setup.</p>
        </div>

        <!-- Test Section 1: Character with Active Webcam -->
        <div class="test-section">
            <h2>Test 1: Character with Active Webcam</h2>
            <div class="character-grid">
                <div class="character-card">
                    <h3>Orlok (Active Webcam)</h3>
                    <%- include('components/video-configuration', { 
                        character: { id: 1, char_name: 'Orlok' }, 
                        webcam: { 
                            id: 1, 
                            name: 'Orlok Head Camera', 
                            deviceId: 0, 
                            devicePath: '/dev/video0', 
                            resolution: '1280x720', 
                            fps: 30, 
                            status: 'active' 
                        } 
                    }) %>
                </div>
            </div>
        </div>

        <!-- Test Section 2: Character with Inactive Webcam -->
        <div class="test-section">
            <h2>Test 2: Character with Inactive Webcam</h2>
            <div class="character-grid">
                <div class="character-card">
                    <h3>Coffin (Inactive Webcam)</h3>
                    <%- include('components/video-configuration', { 
                        character: { id: 2, char_name: 'Coffin' }, 
                        webcam: { 
                            id: 2, 
                            name: 'Coffin Interior Camera', 
                            deviceId: 1, 
                            devicePath: '/dev/video1', 
                            resolution: '640x480', 
                            fps: 15, 
                            status: 'inactive' 
                        } 
                    }) %>
                </div>
            </div>
        </div>

        <!-- Test Section 3: Character without Webcam -->
        <div class="test-section">
            <h2>Test 3: Character without Webcam</h2>
            <div class="character-grid">
                <div class="character-card">
                    <h3>Pumpkinhead (No Webcam)</h3>
                    <%- include('components/video-configuration', { 
                        character: { id: 3, char_name: 'Pumpkinhead' }, 
                        webcam: null 
                    }) %>
                </div>
            </div>
        </div>

        <!-- Test Section 4: Multiple Characters Side by Side -->
        <div class="test-section">
            <h2>Test 4: Multiple Characters Comparison</h2>
            <div class="character-grid">
                <div class="character-card">
                    <h3>Character A (Active)</h3>
                    <%- include('components/video-configuration', { 
                        character: { id: 4, char_name: 'Test Character A' }, 
                        webcam: { 
                            id: 4, 
                            name: 'Test Camera A', 
                            deviceId: 0, 
                            devicePath: '/dev/video0', 
                            resolution: '1920x1080', 
                            fps: 60, 
                            status: 'active' 
                        } 
                    }) %>
                </div>
                
                <div class="character-card">
                    <h3>Character B (No Webcam)</h3>
                    <%- include('components/video-configuration', { 
                        character: { id: 5, char_name: 'Test Character B' }, 
                        webcam: null 
                    }) %>
                </div>
            </div>
        </div>

        <!-- Test Section 5: Component Features -->
        <div class="test-section">
            <h2>Test 5: Component Features</h2>
            <div class="test-info">
                <h4>üîß Available Features</h4>
                <ul>
                    <li><strong>Real-time Status:</strong> Shows webcam and stream status with automatic updates</li>
                    <li><strong>Video Preview:</strong> Embedded video stream with fullscreen support</li>
                    <li><strong>Stream Controls:</strong> Start, stop, restart streaming with visual feedback</li>
                    <li><strong>Configuration Modal:</strong> Inline webcam configuration without page reload</li>
                    <li><strong>Quick Actions:</strong> Test camera, assign webcam, configure settings</li>
                    <li><strong>Responsive Design:</strong> Adapts to different screen sizes</li>
                    <li><strong>Error Handling:</strong> Graceful error display and recovery</li>
                    <li><strong>Auto-refresh:</strong> Periodic status updates and stream monitoring</li>
                </ul>
            </div>
        </div>

        <!-- Test Section 6: API Integration -->
        <div class="test-section">
            <h2>Test 6: API Integration</h2>
            <div class="test-info">
                <h4>üîó API Endpoints Used</h4>
                <ul>
                    <li><code>GET /api/streaming/status/:characterId</code> - Stream status monitoring</li>
                    <li><code>POST /api/streaming/start/:characterId</code> - Start video stream</li>
                    <li><code>POST /api/streaming/stop/:characterId</code> - Stop video stream</li>
                    <li><code>POST /api/streaming/restart/:characterId</code> - Restart video stream</li>
                    <li><code>GET /api/streaming/stream/:characterId</code> - Video stream endpoint</li>
                    <li><code>GET /api/webcam/test-stream</code> - Camera testing endpoint</li>
                    <li><code>GET /parts/webcam/new</code> - Webcam configuration form</li>
                </ul>
            </div>
        </div>
    </div>

    <script src="/js/video-configuration.js"></script>
    <script>
        // Additional test functionality
        console.log('Video Configuration Component Test Page Loaded');
        
        // Log component initialization
        document.addEventListener('DOMContentLoaded', function() {
            const components = document.querySelectorAll('.video-configuration-component');
            console.log(`Initialized ${components.length} video configuration components`);
            
            // Add test event listeners
            components.forEach((component, index) => {
                const characterId = component.dataset.characterId;
                console.log(`Component ${index + 1}: Character ID ${characterId}`);
            });
        });
        
        // Test API connectivity
        async function testApiConnectivity() {
            try {
                const response = await fetch('/api/streaming/all');
                const data = await response.json();
                console.log('API Test - All Streams:', data);
            } catch (error) {
                console.error('API Test Failed:', error);
            }
        }
        
        // Run API test after page load
        setTimeout(testApiConnectivity, 2000);
    </script>
</body>
</html>
