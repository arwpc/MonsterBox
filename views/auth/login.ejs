<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MonsterBox - Secure Login</title>
    <link href="https://fonts.googleapis.com/css2?family=Creepster&family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Roboto', sans-serif;
            background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #fff;
        }

        .login-container {
            background: rgba(0, 0, 0, 0.8);
            border: 2px solid #ff6b35;
            border-radius: 15px;
            padding: 40px;
            width: 100%;
            max-width: 400px;
            box-shadow: 0 10px 30px rgba(255, 107, 53, 0.3);
            backdrop-filter: blur(10px);
        }

        .logo {
            text-align: center;
            margin-bottom: 30px;
        }

        .logo h1 {
            font-family: 'Creepster', cursive;
            font-size: 2.5rem;
            color: #ff6b35;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
            margin-bottom: 10px;
        }

        .logo p {
            color: #ccc;
            font-size: 0.9rem;
            font-weight: 300;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #ff6b35;
            font-weight: 500;
            font-size: 0.9rem;
        }

        .form-group input {
            width: 100%;
            padding: 12px 15px;
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid #555;
            border-radius: 8px;
            color: #fff;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .form-group input:focus {
            outline: none;
            border-color: #ff6b35;
            box-shadow: 0 0 10px rgba(255, 107, 53, 0.3);
            background: rgba(255, 255, 255, 0.15);
        }

        .form-group input::placeholder {
            color: #aaa;
        }

        .login-btn {
            width: 100%;
            padding: 12px;
            background: linear-gradient(135deg, #ff6b35 0%, #ff8c42 100%);
            border: none;
            border-radius: 8px;
            color: #fff;
            font-size: 1rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-bottom: 20px;
        }

        .login-btn:hover {
            background: linear-gradient(135deg, #ff8c42 0%, #ff6b35 100%);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(255, 107, 53, 0.4);
        }

        .login-btn:active {
            transform: translateY(0);
        }

        .login-btn:disabled {
            background: #666;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .error-message {
            background: rgba(220, 53, 69, 0.2);
            border: 1px solid #dc3545;
            border-radius: 8px;
            padding: 12px;
            margin-bottom: 20px;
            color: #ff6b6b;
            font-size: 0.9rem;
            display: none;
        }

        .success-message {
            background: rgba(40, 167, 69, 0.2);
            border: 1px solid #28a745;
            border-radius: 8px;
            padding: 12px;
            margin-bottom: 20px;
            color: #6bcf7f;
            font-size: 0.9rem;
            display: none;
        }

        .loading {
            display: none;
            text-align: center;
            color: #ff6b35;
            margin-top: 10px;
        }

        .security-info {
            text-align: center;
            margin-top: 20px;
            padding-top: 20px;
            border-top: 1px solid #444;
        }

        .security-info p {
            color: #aaa;
            font-size: 0.8rem;
            margin-bottom: 5px;
        }

        .security-features {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-top: 10px;
        }

        .security-feature {
            color: #ff6b35;
            font-size: 0.7rem;
            text-align: center;
        }

        .back-link {
            text-align: center;
            margin-top: 20px;
        }

        .back-link a {
            color: #ff6b35;
            text-decoration: none;
            font-size: 0.9rem;
            transition: color 0.3s ease;
        }

        .back-link a:hover {
            color: #ff8c42;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <div class="logo">
            <h1>MonsterBox</h1>
            <p>Secure Remote Access System</p>
        </div>

        <div class="error-message" id="errorMessage"></div>
        <div class="success-message" id="successMessage"></div>

        <form id="loginForm">
            <div class="form-group">
                <label for="username">Username</label>
                <input type="text" id="username" name="username" placeholder="Enter your username" required>
            </div>

            <div class="form-group">
                <label for="password">Password</label>
                <input type="password" id="password" name="password" placeholder="Enter your password" required>
            </div>

            <button type="submit" class="login-btn" id="loginBtn">
                <span id="loginText">Sign In</span>
                <div class="loading" id="loading">Authenticating...</div>
            </button>
        </form>

        <div class="security-info">
            <p>Protected by JWT Authentication</p>
            <div class="security-features">
                <div class="security-feature">
                    üîê<br>Encrypted
                </div>
                <div class="security-feature">
                    üõ°Ô∏è<br>RBAC
                </div>
                <div class="security-feature">
                    üìä<br>Audited
                </div>
            </div>
        </div>

        <div class="back-link">
            <a href="/">‚Üê Back to MonsterBox</a>
        </div>
    </div>

    <script>
        document.getElementById('loginForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;
            const loginBtn = document.getElementById('loginBtn');
            const loginText = document.getElementById('loginText');
            const loading = document.getElementById('loading');
            const errorMessage = document.getElementById('errorMessage');
            const successMessage = document.getElementById('successMessage');
            
            // Clear previous messages
            errorMessage.style.display = 'none';
            successMessage.style.display = 'none';
            
            // Show loading state
            loginBtn.disabled = true;
            loginText.style.display = 'none';
            loading.style.display = 'block';
            
            try {
                const response = await fetch('/auth/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ username, password })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    // Store access token
                    localStorage.setItem('accessToken', result.accessToken);
                    localStorage.setItem('user', JSON.stringify(result.user));
                    
                    successMessage.textContent = 'Login successful! Redirecting...';
                    successMessage.style.display = 'block';
                    
                    // Redirect to main application
                    setTimeout(() => {
                        window.location.href = '/';
                    }, 1000);
                } else {
                    errorMessage.textContent = result.error || 'Login failed';
                    errorMessage.style.display = 'block';
                }
            } catch (error) {
                errorMessage.textContent = 'Network error. Please try again.';
                errorMessage.style.display = 'block';
            } finally {
                // Reset button state
                loginBtn.disabled = false;
                loginText.style.display = 'inline';
                loading.style.display = 'none';
            }
        });
        
        // Check if user is already logged in
        window.addEventListener('load', function() {
            const token = localStorage.getItem('accessToken');
            if (token) {
                // Verify token is still valid
                fetch('/auth/verify', {
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                })
                .then(response => response.json())
                .then(result => {
                    if (result.success) {
                        window.location.href = '/';
                    }
                })
                .catch(() => {
                    // Token invalid, remove it
                    localStorage.removeItem('accessToken');
                    localStorage.removeItem('user');
                });
            }
        });
    </script>
</body>
</html>
